/---------------------
 -- scene3-home.bento
 --
 -- website for scene3.com
 --
 -- Copyright (c) 2013 by Michael St. Hippolyte
 --
 --/
 
site scene3 [=

    adopt three
   
    /------------ GLOBAL ---------------/

    /---- global data ----/
    
    /---- site initialization ----/

    init [=
   
        three.init;
        
        // temporary for debugging
        for three_object o in scene3_scene(home_world, home_styler).objs [=
            o;
        =]
    =]


    /---- global display properties ----/
    
    static color bg_color = "#001133"
    static color fg_color = "#BBBBBB"


    /------------ SESSION --------------/


    /---- initial settings ----/

    initial_settings{} = { "user": "guest" }


    /---- session data ----/
    
    current_user(u) = u

    /---- update session data ----/


    dynamic update_session_values(params{}) [=
    
        user_param = params{"user"}
    
        current_user(: user_param :);
    =]
    
   
    world_play current_world_play(world_play wp) = wp
    

    /---- session initialization ----/
    
    session_init [=
        three.session_init;
        update_session_values(initial_settings);
        current_world_play(: world_play(: home_world, home_styler :) :);
        log("session_init completed, world set to " + current_world_play.wrld.name + ", starting at " + current_world_play.start_place.name + ", using styler " + current_world_play.stylr.name);
    =]


    /---- site UI ----/

    component base_component [= 
        component_style [|
            color: #fffeee;
            background: #333333;
       |]
    =]
 

    dynamic box_component info_box(title, info) [=
        style [= 
            component_style;
        =]
        
        component_class = "info_box"
        
        [| <h3> |]
        title;
        [| </h3> |]
        
        info;
    =]
    

     
    base_component box_component [=
        style [|
            [= component_style; =]
            padding: 0.25em;
            border-style: groove;
            border-width: 2px;
            border-color: #339988;
        |]
    =]
    
    panel_switcher_function [|
        function switchPanels(idFrom, idTo) {
            if (idFrom !== undefined) {
                var elFrom = document.getElementById(idFrom);
                elFrom.style.opacity = 0;
                elFrom.style.visibility = "hidden";
            }
            if (idTo !== undefined) {
                var elTo = document.getElementById(idTo);
                elTo.style.opacity = 1;
                elTo.style.visibility = "visible";
            }
        }    
    |]    

    
    dynamic component back_next_panel(id_back, id_this, id_next) [=
        component_class = "bottom_panel" 

        back_button_id = "back_to_" + id_back 
        next_button_id = "next_to_" + id_next 
        
        if (id_back) [|
            <div id="back_to_[= id_back; =]" class="panel_button"
                 style="float: left; cursor: pointer;"
                 onclick="switchPanels('[= id_this; =]', '[= id_back; =]'); return false;">back</div>
        |] else [|
            <div class="panel_button disabled_text" style="float: left">back</div>
        |]
        
        if (id_next) [|
            <div id="next_to_[= id_next; =]" class="panel_button" 
                 style="float: right; cursor: pointer;"
                 onclick="switchPanels('[= id_this; =]', '[= id_next; =]'); return false;">next</div>
        |] else [|
            <div class="panel_button disabled_text" style="float: right">next</div>
        |]
    =]


    /------------ PAGES ----------------/

    boolean is_home(boolean flag) = flag
    boolean is_help(boolean flag) = flag
    boolean is_test(boolean flag) = flag
        
    
    page(*) basepage(params{}) [=

        title [| scene3 |]
        
        boolean auto_style = false
        boolean ajax_enabled = true
       
        links[] = [ [| href="/s3.css" rel="stylesheet" type="text/css" |] ]


        page_init [=
            log("page name: " + page_name);

            is_home(: page_name == "" || page_name == "index" || page_name == "home" :);
            is_help(: starts_with(page_name, "help") || ends_with(page_name, "_help") :);
            is_test(: starts_with(page_name, "test") || ends_with(page_name, "_test") :);

            if (params) [=
                log("updating session values");
                update_session_values(params);
            =]
        =]
        
        script [=
           panel_switcher_function;
        =]
        
        sub;
    =]

    basepage(*) index(params{}) [=
    
        [|
            <div class="overlay">

            <div id="panel1" class="overlay_panel">
                <h1>scene3</h1>
                <h2>mission:</h2>
                <p><strong>To enable the authoring and sharing of immersive stories and worlds. 
                </strong></p>
                <h2>how exactly?</h2>
                <p><strong>scene3</strong> is an open source interactive 3D content server.  It can run as a standalone server,
                   or as a servlet on a standard web application server.  On the client side, it uses the three.js
                   javascript library and the WebGL graphics api to render video-game-quality 3D content on modern browsers.
                </p>
                [= back_next_panel(null, "panel1", "panel2"); =]         
            </div>

            <div id="panel2" class="overlay_panel">
                <h1>scene3</h1>
                <h2>advantage:</h2>
                <p><strong>scene3</strong> makes the authoring of immersive stories and interactive 3D content
                   <strong>simpler, cleaner and more productive</strong>.
                </p>
                <h2>how exactly?</h2>
                <p>With <strong>AWMs</strong> (abstract world models) and <strong>3SS</strong> (3D style sheets). By separating the
                   conceptual content from visual realization, <strong>scene3</strong> lets writers focus on the story and artists
                   on the visuals.
                </p> 
                [= back_next_panel("panel1", "panel2", null); =]         
            </div>

            </div>
        |]

        log("about to instantiate three_player with world set to " + current_world_play.wrld.name + ", starting at " + current_world_play.start_place.name + ", using styler " + current_world_play.stylr.name);
        three_player(current_world_play);
    =]


    basepage(*) full_screen(params{}) [=
        
        three_player(current_world_play);
    =]

    /---- pseudofiles ----/

    js [=
        lib [=
            three [=
                js [=
                    include_file("../3p/lib/three.js");
                =]
            =]
            stats [=
                js [=
                    include_file("../3p/lib/stats.min.js");
                =]
            =]
        =]
    =]
    
    s3 [=
         dynamic css [|

/* Global CSS for scene3 */
 
html, body {
    height: 100%;
}
        
body {        
    font-family: Helvetica, Arial, Geneva, sans-serif;
    font-weight: normal;
    font-size: 12pt;
    color: [= fg_color; =];
    background-color: [= bg_color; =];
    margin: 0;
    width: 100%;
    height: 100%;
    min-width: 100%;
    min-height: 100%;
    overflow: hidden;
}

.overlay {
    position: absolute;
    width: 100%;
    padding: 2em;
    z-index: 100;
}

.overlay_panel {
    position: absolute;
    padding: 2em;
    background: rgba(136, 136, 136, 0.25);
    color: #FFFFAA;
    transition: opacity 1.5s, visibility 2s;
    -webkit-transition: opacity 1.5s, visibility 2s; /* Safari */
}

.bottom_panel {
    position: relative;
    bottom: 0;
    height: 24pt;
    padding: 8pt 0 0 0;
    color: #FFFFFF;
}

.panel_button {
    padding: 4pt 4em;
    background: #000000;
    font-weight: bold;
    color: #FFFFFF;    
}    

.disabled_text {
    color: #888888;
}

#three_player {
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    z-index: 0;
}

#panel1 {  
    display: block;
    top: 2em;
    left: 1em;
    width: 32em;
    opacity: 1;
    visibility: visible;
}

#panel2 {
    display: block;
    top: 6em;
    right: 11em;
    width: 32em;
    opacity: 0;
    visibility: hidden;
}

#tc {
    width: 100%;
    height: 100%;
}

#info {
    position: absolute;
    top: 0px;
    width: 100%;
    padding: 5px;
}


a:link { 
    color: #dd0000;
}

a:visited { 
    color: #aa00dd;
}

.menu_link {
    font-family: Helvetica, Arial, Geneva, sans-serif;
    font-weight: bold;
    font-size: 12pt;
    color: [= fg_color; =];
    text-decoration: none;
}

.info_box {
    font-size: 9pt;
    margin: 2pt 0.25em 4pt 0.25em;
    padding: 4px 6px 4px 6px;
    border-style: solid;
    border-width: 1px;
    border-color: #77aaaa;
}
.info_box h3 {
    font-size 9pt;
    font-weight: bold;
    color: #ffffff;
    text-align: center;
}

        |]
    =]

=]
 