/---------------------
 -- scene3-view.bento
 --
 -- A rendering of a scene3 world.
 --
 -- Copyright (c) 2013 by Michael St. Hippolyte
 --
 --/
 
site scene3 [=

    adopt three


    /---- 3D viewer ----/ 

    three_component(*) three_viewer(scene sc),(params{}) [=
        canvas_id = "tc"

        include_scripts[] = [ "/js/lib/three.js", "/js/lib/stats.js" ]
    
        sub_script [|
            stats = new Stats();
            stats.domElement.style.position = 'absolute';
            stats.domElement.style.top = '0px';
            stats.domElement.style.left = (canvasWidth - 80) + 'px';
            [= canvas_container; =].appendChild(stats.domElement);
        |]

        js_function post_render [=
            body [|
                stats.update();
            |]
        =]

        log("  >> instantiating three_viewer with scene " + sc.type);
            
    =]        


    scene scene3_scene(place plc, styler stylr) [=

        model_object[] model_objs = [
            plc.sky,
     
            plc.ground,

            for fixture f in plc.fixtures [=
                f
            =],
            
            for prop pp in plc.props [=
                pp
            =],

            for actor a in plc.actors [=
                a
            =]
        ]

        three_object[] objs = [
            for model_object mo in model_objs and int i from 0 [=
                styled_obj(stylr, mo, make_var_name(mo.name, i))
            =]
        ]

        scripts[] = []
    =]

    int{} seq_for_name = {}
    
    dynamic make_var_name(nm, int seq) [=
        int nm_seq = seq_for_name{var_name}
        
        var_name =  nm  /--- replace(nm, " ", "_") ---/

        if (seq == 0) [=
            table.clear(seq_for_name);
            table.set(seq_for_name, var_name, seq);
            var_name;
            log("         ::::: make_var_name(" + nm + ", " + seq + ") = " + var_name);    
            
        =] else if (nm_seq != seq) [=
            table.set(seq_for_name, (var_name + seq), seq);
            (var_name + seq); 
            log("         ::::: make_var_name(" + nm + ", " + seq + ") = " + (var_name + seq));    

        =] else [=
            table.set(seq_for_name, var_name, seq);
            var_name;
            log("         ::::: make_var_name(" + nm + ", " + seq + ") = " + var_name);    
        =]
    
    =]
  

    dynamic three_object styled_obj(styler sty, model_object m, obj_name) [=
        style_set ss = sty.style_for_obj(m)
        three_class = "GreenCube"
        name = obj_name

        green_cube;
    =]


    phong_material green_material [=
        undecorated color = 0x33CC33
    =]
           
    mesh(cube_geometry(10, 10, 10), green_material) green_cube [=
        position pos = position(0, 2, 0)
    =]


=]
 